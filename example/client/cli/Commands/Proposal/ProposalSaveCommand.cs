using System.CommandLine;
using Common;
using Common.Cli;
using Contracts.App;
using SyncCli.Extensions;

namespace SyncCli.Commands;
public class ProposalSaveCommand : CliCommand
{
    public ProposalSaveCommand() : base(
        "save",
        "Save a Proposal via the App Graph API",
        new Func<string, string, string, int, Task>(Call),
        new()
        {
            new Option<string>(
                new string[] { "--name", "-n" },
                getDefaultValue: () => "CLI Generated Proposal",
                description: "Proposal name"
            ),
            new Option<string>(
                new string[] { "--description", "--desc", "-d" },
                getDefaultValue: () => "A Proposal generated by the Sync CLI",
                description: "Proposal description"
            ),
            new Option<int>(
                new string[] { "--id", "-i" },
                getDefaultValue: () => 0,
                description: "Proposal ID"
            )
        }
    ) { }

    static async Task Call(string app, string name, string description, int id)
    {
        AppGraph ag = App.GetAppGraph(app);

        Console.WriteLine($"Saving proposal {name}");
        ApiResult<ProposalContract>? result = await ag.SaveProposal(new()
        {
            Id = id,
            Name = name,
            Description = description
        });

        if (result is not null)
        {
            if (result.Data is not null)
                App.PrintProposal(result.Data);

            Console.WriteLine(result.Message);
        }
        else
            Console.WriteLine($"Proposal {name} was unable to be saved");
    }
}